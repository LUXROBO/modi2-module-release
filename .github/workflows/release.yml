# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  upload-release:
    runs-on: ubuntu-latest

    steps:
    - name: checkout branch
      uses: actions/checkout@v1

    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        architecture: 'x64'

    - name: install requirments
      run: pip install -r requirements.txt

    - name: run python script for archive firmware
      run: python archive_binary.py ${{ github.ref_name }}

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.ref_name }}
        path: archive/${{ github.ref_name }}.zip
        retention-days: 1

    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: README.md
        draft: false
        prerelease: false

    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: ${{ github.ref_name }}

    - name: upload artifacts
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.ref_name }}/${{ github.ref_name }}.zip
        asset_name: ${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp ./archive s3://${{ secrets.AWS_S3_MODI2_MODULE_FIRMWARE_URL }} --region ap-northeast-2 --acl public-read --recursive
